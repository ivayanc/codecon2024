"""base init

Revision ID: 0336e6c8ce0f
Revises: 
Create Date: 2024-04-13 21:36:45.012869

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0336e6c8ce0f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('region',
    sa.Column('region_id', sa.BigInteger(), nullable=False),
    sa.Column('region_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('region_id')
    )
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birthday_date', sa.Date(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('house_number', sa.String(), nullable=True),
    sa.Column('flat_number', sa.String(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('is_volunteer', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('telegram_id')
    )
    op.create_table('evacuation_request',
    sa.Column('request_id', sa.BigInteger(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('home_number', sa.String(), nullable=False),
    sa.Column('flat_number', sa.String(), nullable=False),
    sa.Column('contact_first_name', sa.String(), nullable=True),
    sa.Column('contact_last_name', sa.String(), nullable=True),
    sa.Column('contact_phone_number', sa.String(), nullable=True),
    sa.Column('any_special_needs', sa.Boolean(), nullable=False),
    sa.Column('special_needs', sa.String(), nullable=True),
    sa.Column('volunteer_id', sa.BigInteger(), nullable=True),
    sa.Column('request_status', sa.Enum('created', 'taken_by_volunteer', 'details_arranged', 'evacuation_ended', 'rated_and_ended', name='evacuationrequeststatus'), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=False),
    sa.Column('evacuation_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['region.region_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ),
    sa.ForeignKeyConstraint(['volunteer_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    op.create_table('request',
    sa.Column('request_id', sa.BigInteger(), nullable=False),
    sa.Column('region_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('type', sa.Enum('psychological', 'legal', 'nutrition', 'military', 'medical', 'clothing', 'baby', 'houshehold', 'equipments', name='requesttype'), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('home_number', sa.String(), nullable=True),
    sa.Column('flat_number', sa.String(), nullable=True),
    sa.Column('contact_first_name', sa.String(), nullable=True),
    sa.Column('contact_last_name', sa.String(), nullable=True),
    sa.Column('contact_phone_number', sa.String(), nullable=True),
    sa.Column('request_text', sa.String(), nullable=False),
    sa.Column('volunteer_id', sa.BigInteger(), nullable=True),
    sa.Column('request_status', sa.Enum('created', 'taken_by_volunteer', 'partially_fulfilled', 'completely_fulfilled', 'delivered', 'accepted_by_user', 'rated_and_ended', name='requeststatus'), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=False),
    sa.Column('request_delivery_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['region.region_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ),
    sa.ForeignKeyConstraint(['volunteer_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('request_id')
    )
    op.create_table('user_region',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('region_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('volunteer_region', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['region.region_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_region')
    op.drop_table('request')
    op.drop_table('evacuation_request')
    op.drop_table('users')
    op.drop_table('region')
    # ### end Alembic commands ###
